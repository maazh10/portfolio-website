---
type Props = {
  title: string;
  location: string;
  time: string;
  caption: string;
  imagePaths: string[];
  alt: string;
};

const { title, location, time, caption, imagePaths, alt } = Astro.props;

function getTimeColor(timeString: string): string {
  const times = timeString.split(" / ");
  const firstTime = times[0];

  const hour = parseInt(firstTime.split(":")[0]);
  const isPM = firstTime.includes("PM");
  const adjustedHour = isPM ? hour + 12 : hour;

  // Dawn: 5:00 AM - 6:30 AM (soft blue)
  if (adjustedHour >= 5 && adjustedHour < 6.5) return "#7790aa";
  // Morning: 6:30 AM - 10:00 AM (bright blue)
  if (adjustedHour >= 6.5 && adjustedHour < 10) return "#4d94ff";
  // Midday: 10:00 AM - 4:00 PM (yellow)
  if (adjustedHour >= 10 && adjustedHour < 16) return "#ffd700";
  // Golden Hour: 4:00 PM - 8:30 PM (orange-gold)
  if (adjustedHour >= 16 && adjustedHour < 20.5) return "#ffa500";
  // Blue Hour: 8:30 PM - 10:00 PM (deep blue)
  if (adjustedHour >= 20.5 && adjustedHour < 22) return "#4169e1";
  // Night: After 8:30 PM (dark blue)
  return "#1a237e";
}
---

<div class="slideshow-container">
  <div class="swiper">
    <div class="swiper-wrapper">
      {
        imagePaths.map((imagePath) => (
          <div class="swiper-slide">
            <a target="_blank" href={imagePath}>
              <img src={imagePath} alt={alt} loading="lazy" />
            </a>
          </div>
        ))
      }
    </div>
    <div class="swiper-button-prev"></div>
    <div class="swiper-button-next"></div>
  </div>
  <div class="photo-details">
    <h3>{title}</h3>
    <p>
      <span class="location">üìç {location}</span>
      &nbsp;‚Ä¢&nbsp;
      <span class="time" style={`color: ${getTimeColor(time)};`}>üïí {time}</span
      >
    </p>
    {caption && <p class="caption">{caption}</p>}
  </div>
</div>

<style>
  .slideshow-container {
    padding: 50px 0;
    border-bottom: 1px solid #b7b7b7;
  }

  .swiper {
    width: 100%;
  }

  .swiper-slide {
    text-align: center;
  }

  .swiper-slide a {
    display: inline-block;
    position: relative;
  }

  .swiper-slide a:hover::after {
    opacity: 1;
  }

  .swiper-slide a::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.3);
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .swiper-slide img {
    display: block;
    max-width: 100%;
    max-height: 75vh;
    object-fit: contain;
  }

  .photo-details {
    text-align: center;
    margin-top: 20px;
  }

  .photo-details h3 {
    margin-bottom: 5px;
    color: #333;
    font-weight: 600;
  }

  .photo-details p {
    margin: 0;
    font-size: 0.9em;
    color: #555;
  }

  .location {
    color: #007bff;
    font-weight: 500;
  }

  .time {
    font-weight: 500;
  }

  .caption {
    font-style: italic;
    color: #666;
    margin-top: 10px !important;
  }

  :global(.swiper-button-next),
  :global(.swiper-button-prev) {
    color: #b7b7b7 !important;
  }
</style>

<script>
  import Swiper from "swiper";
  import { Navigation, Autoplay } from "swiper/modules";
  import "swiper/css";
  import "swiper/css/navigation";

  const swipers = document.querySelectorAll(".swiper");
  swipers.forEach((swiperElement) => {
    new Swiper(swiperElement as HTMLElement, {
      modules: [Navigation, Autoplay],
      navigation: {
        nextEl: ".swiper-button-next",
        prevEl: ".swiper-button-prev",
      },
      autoplay: {
        delay: 5000,
        disableOnInteraction: false,
      },
      loop: true,
      autoHeight: true,
    });
  });
</script>
